{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./src/pages/test.vue?939c","webpack:///src/pages/test.vue","webpack:///./src/pages/test.vue?16c2","webpack:///./src/pages/test.vue","webpack:///./node_modules/core-js/modules/es.array.map.js"],"names":["$","$find","find","addToUnscopables","arrayMethodUsesToLength","FIND","SKIPS_HOLES","USES_TO_LENGTH","Array","target","proto","forced","callbackfn","this","arguments","length","undefined","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","on","test","_v","staticRenderFns","data","methods","db","collection","mounted","component","$map","map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT"],"mappings":"6GACA,IAAIA,EAAI,EAAQ,QACZC,EAAQ,EAAQ,QAAgCC,KAChDC,EAAmB,EAAQ,QAC3BC,EAA0B,EAAQ,QAElCC,EAAO,OACPC,GAAc,EAEdC,EAAiBH,EAAwBC,GAGzCA,IAAQ,IAAIG,MAAM,GAAGH,IAAM,WAAcC,GAAc,KAI3DN,EAAE,CAAES,OAAQ,QAASC,OAAO,EAAMC,OAAQL,IAAgBC,GAAkB,CAC1EL,KAAM,SAAcU,GAClB,OAAOX,EAAMY,KAAMD,EAAYE,UAAUC,OAAS,EAAID,UAAU,QAAKE,MAKzEb,EAAiBE,I,yCCvBjB,IAAIY,EAAS,WAAa,IAAIC,EAAIL,KAASM,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,SAAS,CAACE,YAAY,yBAAyBC,MAAM,CAAC,KAAO,UAAUC,GAAG,CAAC,MAAQP,EAAIQ,OAAO,CAACR,EAAIS,GAAG,aAC/MC,EAAkB,G,2GCOtB,kBACA,GACEC,KADF,WAEI,MAAO,IAETC,QAAS,CACP,QADJ,SACA,iKACA,8CADA,SAEA,eAFA,cAEA,EAFA,yBAGA,uCAHA,8CAKIJ,KANJ,WAOMK,EAAGC,WAAW,UACpB,MACA,kBACQ,IAAR,0BAAU,OAAV,YACQ,EAAR,qBACA,MACA,kBACU,IAAV,0BAAY,OAAZ,YACU,QAAV,OACU,QAAV,OACU,IAAV,uBACY,OAAZ,SACA,EACA,cACc,GAAd,WAIU,QAAV,eAOEC,QApCF,cCT8U,I,YCO1UC,EAAY,eACd,EACAjB,EACAW,GACA,EACA,KACA,KACA,MAIa,aAAAM,E,2CCjBf,IAAIlC,EAAI,EAAQ,QACZmC,EAAO,EAAQ,QAAgCC,IAC/CC,EAA+B,EAAQ,QACvCjC,EAA0B,EAAQ,QAElCkC,EAAsBD,EAA6B,OAEnD9B,EAAiBH,EAAwB,OAK7CJ,EAAE,CAAES,OAAQ,QAASC,OAAO,EAAMC,QAAS2B,IAAwB/B,GAAkB,CACnF6B,IAAK,SAAaxB,GAChB,OAAOuB,EAAKtB,KAAMD,EAAYE,UAAUC,OAAS,EAAID,UAAU,QAAKE","file":"js/page-test.18842e58.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength(FIND);\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('button',{staticClass:\"btn btn-sm btn-primary\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.test}},[_vm._v(\"test\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <button type=\"button\" @click=\"test\" class=\"btn btn-sm btn-primary\">test</button>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport firebase from \"firebase\";\r\nlet db = firebase.firestore();\r\nexport default {\r\n  data() {\r\n    return {};\r\n  },\r\n  methods: {\r\n    async readIds(collection, ids) {\r\n      const reads = ids.map(id => collection.doc(id).get());\r\n      const result = await Promise.all(reads);\r\n      return result.map(v => v.data());\r\n    },\r\n    test() {\r\n      db.collection(\"table1\")\r\n        .get()\r\n        .then(res => {\r\n          let data = res.docs.map(e => e.data());\r\n          db.collection(\"table2\")\r\n            .get()\r\n            .then(res2 => {\r\n              let data2 = res2.docs.map(e => e.data());\r\n              console.log(data)\r\n              console.log(data2)\r\n              let leftjoin = _.map(data2, function(obj) {\r\n                return _.assign(\r\n                  obj,\r\n                  _.find(data1, {\r\n                    id: obj.id\r\n                  })\r\n                );\r\n              });\r\n              console.log(leftjoin)\r\n            });\r\n        });\r\n\r\n      // console.log(leftjoin);\r\n    }\r\n  },\r\n  mounted() {}\r\n};\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./test.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./test.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./test.vue?vue&type=template&id=3c89f748&\"\nimport script from \"./test.vue?vue&type=script&lang=js&\"\nexport * from \"./test.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"],"sourceRoot":""}